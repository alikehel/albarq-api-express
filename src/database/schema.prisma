generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_POSTGRESQL_PROD")
}

// const roles = [
//   "مدير الشركه",
//   "مدير الحسابات",
//   "محاسب",
//   "مندوب توصيل",
//   "مندوب استلام",
//   "مدير فرع",
//   "موظف طوارئ",
//   "مدخل بيانات",
//   "موظف مخزن",
//    "موظف استعلامات"
// ];

enum Role {
  SUPER_ADMIN
  COMPANY_MANAGER
  ACCOUNT_MANAGER
  ACCOUNTANT
  DELIVERY_AGENT
  RECEIVING_AGENT
  BRANCH_MANAGER
  EMERGENCY_EMPLOYEE
  DATA_ENTRY
  REPOSITORIY_EMPLOYEE
  INQUIRY_EMPLOYEE
}

// const permissions = [
// "احالة الطلبات الي المندوب",
// "اضافة صفحة",
// "اضافة طلبية",
// "اضافة عميل",
// "تعديل اسم عميل",
// "تعديل المبلغ الكلي للعملية",
// "تغيير الحالة",
// "تغيير حالة الطلبية المغلقة",
// "قفل حالة الطلبية",
// "مسح الاسعار",
// "مسح الطلبيات",
// "مسح الكشوفات",
// "مسح كشوفات الشركات",
// "مسح كشوفات المخازن",
// "مسح كشوفات المحافظات",
// "مسح كشوفات المندوبين",
// ];

enum Permission {
  ADD_ORDER_TO_DELIVERY_AGENT
  ADD_PAGE
  ADD_ORDER
  ADD_CLIENT
  EDIT_CLIENT_NAME
  EDIT_ORDER_TOTAL_AMOUNT
  CHANGE_ORDER_STATUS
  CHANGE_CLOSED_ORDER_STATUS
  LOCK_ORDER_STATUS
  DELETE_PRICES
  DELETE_ORDERS
  DELETE_REPORTS
  DELETE_COMPANY_REPORTS
  DELETE_REPOSITORIES_REPORTS
  DELETE_GOVERNMENT_REPORTS
  DELETE_DELIVERY_AGENT_REPORTS
}

enum Governorate {
  AL_ANBAR
  BABIL
  BAGHDAD
  BASRA
  DHI_QAR
  AL_QADISIYYAH
  DIYALA
  DUHOK
  ERBIL
  KARBALA
  KIRKUK
  MAYSAN
  MUTHANNA
  NAJAF
  NINAWA
  SALAH_AL_DIN
  SULAYMANIYAH
  WASIT
}

// const accountTypes = ["عميل", "مساعد عميل"];

enum AccountType {
  CLIENT
  CLIENT_ASSISTANT
}

model User {
  id           String   @id @default(uuid())
  username     String   @unique
  name         String
  password     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  isSuperAdmin Boolean  @default(false)
  phone        String?
  salary       Decimal? @default(0)
  // roless       String[]
  // image        String?
  // fcm          String?
  // token        String?

  // userId String
  // tenantId     String
  repositoryId String?
  branchId     String?

  // permissions Permission[]
  repository  Repository?  @relation(fields: [repositoryId], references: [id])
  branch      Branch?      @relation(fields: [branchId], references: [id])
  // tenant      Tenant       @relation(fields: [tenantId], references: [id])
  role        Role
  permissions Permission[]
  Client      Client[]
  // Location      Location[]
  // Product     Product[]
  Location    Location[]
  // SubLocation SubLocation[]
}

model Client {
  id          String      @id @default(uuid())
  name        String      @unique
  phone       String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  accountType AccountType
  token       String?
  password    String?

  branchId String
  userId   String

  branch    Branch? @relation(fields: [branchId], references: [id])
  createdBy User    @relation(fields: [userId], references: [id])
}

model Branch {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String?
  phone     String?

  // governmentId String
  // tenantId     String
  // locationId String? @unique

  // tenant     Tenant       @relation(fields: [tenantId], references: [id])
  // government Government   @relation(fields: [governmentId], references: [id])
  // User       User[]
  Repository  Repository[]
  Client      Client[]
  // location   Location
  User        User[]
  governorate Governorate?
  Location    Location[]
}

model Repository {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  branchId String
  // tenantId  String

  // User   User[]
  branch Branch @relation(fields: [branchId], references: [id])
  // tenant    Tenant   @relation(fields: [tenantId], references: [id])
  User   User[]
}

model Location {
  id   String @id @default(uuid())
  name String @unique

  // governmentId String
  // tenantId     String

  // tenant     Tenant     @relation(fields: [tenantId], references: [id])
  // government Government @relation(fields: [governmentId], references: [id])
  // users      User[]
  deliveryAgents User[]
  // SubLocation SubLocation[]
  governorate    Governorate?
  branch         Branch       @relation(fields: [branchId], references: [id])
  branchId       String
}

// model Tenant {
//   id                          String   @id @default(uuid())
//   name                        String   @unique
//   phone                       String?
//   website                     String?
//   logo                        String?
//   registration                String?
//   baghdad_price               Decimal  @default(0)
//   governments_price           Decimal  @default(0)
//   delivery_price              Decimal  @default(0)
//   additional_price            Decimal  @default(0)
//   additional_price_for_weight Decimal  @default(0)
//   additional_price_for_unused Decimal  @default(0)
//   auto_update                 Boolean  @default(false)
//   main_company                Boolean  @default(false)
//   createdAt                   DateTime @default(now())
//   updatedAt                   DateTime @updatedAt

//   government Government[]
//   // Branch     Branch[]
//   // User       User[]
//   // Repository                  Repository[]
//   // Location   Location[]
// }

// model Store {
//   id String @id @default(uuid())
// }

// model Product {
//   id        String   @id @default(uuid())
//   title     String
//   price     Decimal
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   image     String?
//   available Boolean  @default(true)
//   quantity  Int      @default(0)

//   categoryId String
//   userId     String

//   category Category @relation(fields: [categoryId], references: [id])
//   // user     User     @relation(fields: [userId], references: [id])
// }

// model Notification {
//   id String @id @default(uuid())
// }

// model Government {
//   id        String   @id @default(uuid())
//   name      String   @unique
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   // tenantId String

//   // tenant   Tenant @relation(fields: [tenantId], references: [id])
//   // Branch Branch[]
//   // Location Location[]
// }

// model Category {
//   id String @id @default(uuid())

//   Product Product[]
// }

// model Order {
//   id String @id @default(uuid())
// }
