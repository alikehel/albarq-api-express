{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Al Barq API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/api/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/auth/signin": {
      "post": {
        "tags": [
          "Auth Routes"
        ],
        "description": "",
        "responses": {
          "201-1": {
            "description": "User Signined Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "token": {
                  "type": "string",
                  "example": "token"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": "Password is not correct"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Password is not correct"
          },
          "400-2": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User not found"
          },
          "500-1": {
            "description": "Cant signin the user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant signin the user"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSigninSchema"
              },
              "examples": {
                "UserSigninExample": {
                  "$ref": "#/components/examples/UserSigninExample"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/validate-token": {
      "post": {
        "tags": [
          "Auth Routes"
        ],
        "description": "User needs to be logged in",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Token is valid",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "valid"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "invalid token"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Token is invalid"
          },
          "401-2": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": "Please Log In!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Please Log In!"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "User created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "User Name"
                    },
                    "username": {
                      "type": "string",
                      "example": "username"
                    },
                    "phone": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "salary": {
                      "type": "number",
                      "example": 1000
                    },
                    "role": {
                      "type": "string",
                      "example": "SUPER_ADMIN"
                    },
                    "permissions": {
                      "type": "array",
                      "example": [
                        "CREATE_USER"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    },
                    "repository": {
                      "type": "string",
                      "example": "Repository data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the user"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateSchema"
              },
              "examples": {
                "UserCreateExample": {
                  "$ref": "#/components/examples/UserCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all users",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "User Name"
                      },
                      "username": {
                        "type": "string",
                        "example": "username"
                      },
                      "phone": {
                        "type": "string",
                        "example": "0123456789"
                      },
                      "salary": {
                        "type": "number",
                        "example": 1000
                      },
                      "role": {
                        "type": "string",
                        "example": "SUPER_ADMIN"
                      },
                      "permissions": {
                        "type": "array",
                        "example": [
                          "CREATE_USER"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "branch": {
                        "type": "string",
                        "example": "Branch data object"
                      },
                      "repository": {
                        "type": "string",
                        "example": "Repository data object"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the users data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the users data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/users/{userID}": {
      "get": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the user data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "User Name"
                    },
                    "username": {
                      "type": "string",
                      "example": "username"
                    },
                    "phone": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "salary": {
                      "type": "number",
                      "example": 1000
                    },
                    "role": {
                      "type": "string",
                      "example": "SUPER_ADMIN"
                    },
                    "permissions": {
                      "type": "array",
                      "example": [
                        "CREATE_USER"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    },
                    "repository": {
                      "type": "string",
                      "example": "Repository data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "User Name"
                    },
                    "username": {
                      "type": "string",
                      "example": "username"
                    },
                    "phone": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "salary": {
                      "type": "number",
                      "example": 1000
                    },
                    "role": {
                      "type": "string",
                      "example": "SUPER_ADMIN"
                    },
                    "permissions": {
                      "type": "array",
                      "example": [
                        "CREATE_USER"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    },
                    "repository": {
                      "type": "string",
                      "example": "Repository data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateSchema"
              },
              "examples": {
                "UserUpdateExample": {
                  "$ref": "#/components/examples/UserUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "User deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "User deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the user"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/repositories": {
      "post": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Repository created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Repository Name"
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the repository",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the repository"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryCreateSchema"
              },
              "examples": {
                "RepositoryCreateExample": {
                  "$ref": "#/components/examples/RepositoryCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all repositories",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "Repository Name"
                      },
                      "branch": {
                        "type": "string",
                        "example": "Branch data object"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the repositories data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the repositories data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/repositories/{repositoryID}": {
      "get": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "repositoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the repository data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Repository Name"
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "repositoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Repository updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Repository Name"
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryUpdateSchema"
              },
              "examples": {
                "RepositoryUpdateExample": {
                  "$ref": "#/components/examples/RepositoryUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "repositoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Repository deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Repository deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the repository",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the repository"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/clients": {
      "post": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Client created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "accountType": {
                      "type": "string",
                      "example": "true"
                    },
                    "branch": {
                      "type": "string",
                      "example": "true"
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the client",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the client"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreateSchema"
              },
              "examples": {
                "ClientCreateExample": {
                  "$ref": "#/components/examples/ClientCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all clients",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "true"
                      },
                      "name": {
                        "type": "string",
                        "example": "true"
                      },
                      "phone": {
                        "type": "string",
                        "example": "true"
                      },
                      "accountType": {
                        "type": "string",
                        "example": "true"
                      },
                      "branch": {
                        "type": "string",
                        "example": "true"
                      },
                      "createdBy": {
                        "type": "string",
                        "example": "true"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the clients data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the clients data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/clients/{clientID}": {
      "get": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the client data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "accountType": {
                      "type": "string",
                      "example": "true"
                    },
                    "branch": {
                      "type": "string",
                      "example": "true"
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Client updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "accountType": {
                      "type": "string",
                      "example": "true"
                    },
                    "branch": {
                      "type": "string",
                      "example": "true"
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateSchema"
              },
              "examples": {
                "ClientUpdateExample": {
                  "$ref": "#/components/examples/ClientUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Client deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Client deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the client",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the client"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/branches": {
      "post": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Branch created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Branch Name"
                    },
                    "email": {
                      "type": "string",
                      "example": "Branch email"
                    },
                    "phone": {
                      "type": "string",
                      "example": "Branch phone number"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "AlBasra"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the branch",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the branch"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchCreateSchema"
              },
              "examples": {
                "BranchCreateExample": {
                  "$ref": "#/components/examples/BranchCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all branches",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "Branch Name"
                      },
                      "email": {
                        "type": "string",
                        "example": "Branch email"
                      },
                      "phone": {
                        "type": "string",
                        "example": "Branch phone number"
                      },
                      "governorate": {
                        "type": "string",
                        "example": "AlBasra"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the branches data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the branches data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/branches/{branchID}": {
      "get": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "branchID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the branch data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Branch Name"
                    },
                    "email": {
                      "type": "string",
                      "example": "Branch email"
                    },
                    "phone": {
                      "type": "string",
                      "example": "Branch phone number"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "AlBasra"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "branchID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Branch updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Branch Name"
                    },
                    "email": {
                      "type": "string",
                      "example": "Branch email"
                    },
                    "phone": {
                      "type": "string",
                      "example": "Branch phone number"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "AlBasra"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchUpdateSchema"
              },
              "examples": {
                "BranchUpdateExample": {
                  "$ref": "#/components/examples/BranchUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "branchID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Branch deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Branch deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the branch",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the branch"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/locations": {
      "post": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Location created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "name"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "governorate"
                    },
                    "branch": {
                      "type": "string",
                      "example": "branch object"
                    },
                    "deliveryAgents": {
                      "type": "string",
                      "example": "deliveryAgents object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the location",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the location"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationCreateSchema"
              },
              "examples": {
                "LocationCreateExample": {
                  "$ref": "#/components/examples/LocationCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all locations",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "name"
                      },
                      "governorate": {
                        "type": "string",
                        "example": "governorate"
                      },
                      "branch": {
                        "type": "string",
                        "example": "branch object"
                      },
                      "deliveryAgents": {
                        "type": "string",
                        "example": "deliveryAgents object"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the locations data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the locations data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/locations/{locationID}": {
      "get": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the location data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "name"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "governorate"
                    },
                    "branch": {
                      "type": "string",
                      "example": "branch object"
                    },
                    "deliveryAgents": {
                      "type": "string",
                      "example": "deliveryAgents object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Location updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "name"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "governorate"
                    },
                    "branch": {
                      "type": "string",
                      "example": "branch object"
                    },
                    "deliveryAgents": {
                      "type": "string",
                      "example": "deliveryAgents object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateSchema"
              },
              "examples": {
                "LocationUpdateExample": {
                  "$ref": "#/components/examples/LocationUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Location deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Location deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the location",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the location"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/tenants": {
      "post": {
        "tags": [
          "Tenants Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Tenant created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "website": {
                      "type": "string",
                      "example": "true"
                    },
                    "logo": {
                      "type": "string",
                      "example": "true"
                    },
                    "registrationText": {
                      "type": "string",
                      "example": "true"
                    },
                    "governoratePrice": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryAgentFee": {
                      "type": "string",
                      "example": "true"
                    },
                    "baghdadPrice": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForEvery500000IraqiDinar": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForEveryKilogram": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForRemoteAreas": {
                      "type": "string",
                      "example": "true"
                    },
                    "orderStatusAutomaticUpdate": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the tenant",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the tenant"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantCreateSchema"
              },
              "examples": {
                "TenantCreateExample": {
                  "$ref": "#/components/examples/TenantCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tenants Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all tenants",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "true"
                      },
                      "name": {
                        "type": "string",
                        "example": "true"
                      },
                      "phone": {
                        "type": "string",
                        "example": "true"
                      },
                      "website": {
                        "type": "string",
                        "example": "true"
                      },
                      "logo": {
                        "type": "string",
                        "example": "true"
                      },
                      "registrationText": {
                        "type": "string",
                        "example": "true"
                      },
                      "governoratePrice": {
                        "type": "string",
                        "example": "true"
                      },
                      "deliveryAgentFee": {
                        "type": "string",
                        "example": "true"
                      },
                      "baghdadPrice": {
                        "type": "string",
                        "example": "true"
                      },
                      "additionalPriceForEvery500000IraqiDinar": {
                        "type": "string",
                        "example": "true"
                      },
                      "additionalPriceForEveryKilogram": {
                        "type": "string",
                        "example": "true"
                      },
                      "additionalPriceForRemoteAreas": {
                        "type": "string",
                        "example": "true"
                      },
                      "orderStatusAutomaticUpdate": {
                        "type": "string",
                        "example": "true"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the tenants data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the tenants data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantID}": {
      "get": {
        "tags": [
          "Tenants Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "tenantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the tenant data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "website": {
                      "type": "string",
                      "example": "true"
                    },
                    "logo": {
                      "type": "string",
                      "example": "true"
                    },
                    "registrationText": {
                      "type": "string",
                      "example": "true"
                    },
                    "governoratePrice": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryAgentFee": {
                      "type": "string",
                      "example": "true"
                    },
                    "baghdadPrice": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForEvery500000IraqiDinar": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForEveryKilogram": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForRemoteAreas": {
                      "type": "string",
                      "example": "true"
                    },
                    "orderStatusAutomaticUpdate": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tenants Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "tenantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Tenant updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "website": {
                      "type": "string",
                      "example": "true"
                    },
                    "logo": {
                      "type": "string",
                      "example": "true"
                    },
                    "registrationText": {
                      "type": "string",
                      "example": "true"
                    },
                    "governoratePrice": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryAgentFee": {
                      "type": "string",
                      "example": "true"
                    },
                    "baghdadPrice": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForEvery500000IraqiDinar": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForEveryKilogram": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForRemoteAreas": {
                      "type": "string",
                      "example": "true"
                    },
                    "orderStatusAutomaticUpdate": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantUpdateSchema"
              },
              "examples": {
                "TenantUpdateExample": {
                  "$ref": "#/components/examples/TenantUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tenants Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "tenantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Tenant deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Tenant deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the tenant",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the tenant"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/orders": {
      "post": {
        "tags": [
          "Orders Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Order created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "totalCost": {
                      "type": "string",
                      "example": "true"
                    },
                    "paidAmount": {
                      "type": "string",
                      "example": "true"
                    },
                    "totalCostInUSD": {
                      "type": "string",
                      "example": "true"
                    },
                    "paidAmountInUSD": {
                      "type": "string",
                      "example": "true"
                    },
                    "discount": {
                      "type": "string",
                      "example": "true"
                    },
                    "receiptNumber": {
                      "type": "string",
                      "example": "true"
                    },
                    "quantity": {
                      "type": "string",
                      "example": "true"
                    },
                    "weight": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientName": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientPhone": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientAddress": {
                      "type": "string",
                      "example": "true"
                    },
                    "details": {
                      "type": "string",
                      "example": "true"
                    },
                    "notes": {
                      "type": "string",
                      "example": "true"
                    },
                    "status": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryType": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "example": "true"
                    },
                    "client": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryAgent": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the order",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the order"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateSchema"
              },
              "examples": {
                "OrderCreateExample": {
                  "$ref": "#/components/examples/OrderCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Orders Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all orders",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "true"
                      },
                      "totalCost": {
                        "type": "string",
                        "example": "true"
                      },
                      "paidAmount": {
                        "type": "string",
                        "example": "true"
                      },
                      "totalCostInUSD": {
                        "type": "string",
                        "example": "true"
                      },
                      "paidAmountInUSD": {
                        "type": "string",
                        "example": "true"
                      },
                      "discount": {
                        "type": "string",
                        "example": "true"
                      },
                      "receiptNumber": {
                        "type": "string",
                        "example": "true"
                      },
                      "quantity": {
                        "type": "string",
                        "example": "true"
                      },
                      "weight": {
                        "type": "string",
                        "example": "true"
                      },
                      "recipientName": {
                        "type": "string",
                        "example": "true"
                      },
                      "recipientPhone": {
                        "type": "string",
                        "example": "true"
                      },
                      "recipientAddress": {
                        "type": "string",
                        "example": "true"
                      },
                      "details": {
                        "type": "string",
                        "example": "true"
                      },
                      "notes": {
                        "type": "string",
                        "example": "true"
                      },
                      "status": {
                        "type": "string",
                        "example": "true"
                      },
                      "deliveryType": {
                        "type": "string",
                        "example": "true"
                      },
                      "deliveryDate": {
                        "type": "string",
                        "example": "true"
                      },
                      "client": {
                        "type": "string",
                        "example": "true"
                      },
                      "deliveryAgent": {
                        "type": "string",
                        "example": "true"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the orders data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the orders data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/orders/{orderID}": {
      "get": {
        "tags": [
          "Orders Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the order data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "totalCost": {
                      "type": "string",
                      "example": "true"
                    },
                    "paidAmount": {
                      "type": "string",
                      "example": "true"
                    },
                    "totalCostInUSD": {
                      "type": "string",
                      "example": "true"
                    },
                    "paidAmountInUSD": {
                      "type": "string",
                      "example": "true"
                    },
                    "discount": {
                      "type": "string",
                      "example": "true"
                    },
                    "receiptNumber": {
                      "type": "string",
                      "example": "true"
                    },
                    "quantity": {
                      "type": "string",
                      "example": "true"
                    },
                    "weight": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientName": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientPhone": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientAddress": {
                      "type": "string",
                      "example": "true"
                    },
                    "details": {
                      "type": "string",
                      "example": "true"
                    },
                    "notes": {
                      "type": "string",
                      "example": "true"
                    },
                    "status": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryType": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "example": "true"
                    },
                    "client": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryAgent": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Orders Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Order updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "totalCost": {
                      "type": "string",
                      "example": "true"
                    },
                    "paidAmount": {
                      "type": "string",
                      "example": "true"
                    },
                    "totalCostInUSD": {
                      "type": "string",
                      "example": "true"
                    },
                    "paidAmountInUSD": {
                      "type": "string",
                      "example": "true"
                    },
                    "discount": {
                      "type": "string",
                      "example": "true"
                    },
                    "receiptNumber": {
                      "type": "string",
                      "example": "true"
                    },
                    "quantity": {
                      "type": "string",
                      "example": "true"
                    },
                    "weight": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientName": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientPhone": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientAddress": {
                      "type": "string",
                      "example": "true"
                    },
                    "details": {
                      "type": "string",
                      "example": "true"
                    },
                    "notes": {
                      "type": "string",
                      "example": "true"
                    },
                    "status": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryType": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "example": "true"
                    },
                    "client": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryAgent": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateSchema"
              },
              "examples": {
                "OrderUpdateExample": {
                  "$ref": "#/components/examples/OrderUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Orders Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Order deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Order deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the order",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the order"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "examples": {
      "UserCreateExample": {
        "value": {
          "username": "ustilo",
          "name": "Ross Hahn",
          "password": "1xY7Mwaz3PGZL23",
          "phone": "07975423823",
          "salary": 3331642913456128,
          "repositoryID": "e54e391d-84f3-42e8-9d76-86ebca8ef278",
          "branchID": "c791ffde-a64a-4a20-ade6-5f760ac5d1f1",
          "role": "BRANCH_MANAGER",
          "permissions": [
            "DELETE_ORDERS",
            "ADD_ORDER_TO_DELIVERY_AGENT"
          ]
        }
      },
      "UserSigninExample": {
        "value": {
          "username": "aegrotatio",
          "password": "YjbDes64SXLgUdj"
        }
      },
      "RepositoryCreateExample": {
        "value": {
          "name": "Alvin Abernathy",
          "branchID": "5727b09d-0178-4cf2-976e-e80e7fa60120"
        }
      },
      "UserUpdateExample": {
        "value": {
          "username": "altus",
          "name": "Leslie Swaniawski II",
          "password": "v51selYg245ql7Y",
          "phone": "07714762433",
          "salary": 7109803847450624,
          "repositoryID": "d56297fb-fa22-4bf5-a8f2-e7551cfc2491",
          "branchID": "62bf90ed-022e-4cd0-92d7-ac475d4437a8",
          "role": "REPOSITORIY_EMPLOYEE",
          "permissions": [
            "LOCK_ORDER_STATUS",
            "ADD_CLIENT",
            "DELETE_DELIVERY_AGENT_REPORTS",
            "DELETE_DELIVERY_AGENT_REPORTS"
          ]
        }
      },
      "RepositoryUpdateExample": {
        "value": {
          "name": "Mr. Kristopher Schuster DVM",
          "branchID": "f9e8f689-7b35-43e9-91b1-44c833d841e0"
        }
      },
      "LocationCreateExample": {
        "value": {
          "name": "Audrey Wintheiser",
          "governorate": "AL_ANBAR",
          "branchID": "ffe8e06c-6bfe-4564-85eb-8bef3571a8f3",
          "deliveryAgentsIDs": [
            "f5994fd9-875a-4617-9f73-0d8617e722eb",
            "2eb260aa-3830-4be5-ab85-a05bae0074db",
            "c74259c4-76c9-4e9d-ad71-f01fd6b7a744"
          ]
        }
      },
      "LocationUpdateExample": {
        "value": {
          "name": "Hope Bergstrom",
          "governorate": "SALAH_AL_DIN",
          "branchID": "1ec83294-cf35-4dbc-a996-e80972e91d88",
          "deliveryAgentsIDs": [
            "eaa49e17-1b31-4d31-ab27-2a61d0714084"
          ]
        }
      },
      "ClientCreateExample": {
        "value": {
          "name": "Teresa Thompson",
          "phone": "07904342342",
          "accountType": "CLIENT_ASSISTANT",
          "token": "cinis",
          "password": "Dg7fyPNcKorCE7a",
          "branchID": "f60bac5b-9a80-450e-a734-1e5a04207c83"
        }
      },
      "ClientUpdateExample": {
        "value": {
          "name": "Jaime Dare",
          "phone": "07994233260",
          "accountType": "CLIENT_ASSISTANT",
          "token": "sol",
          "password": "BBaaght5REi411l",
          "branchID": "53118d60-3621-4652-8392-e50313d29e15"
        }
      },
      "BranchCreateExample": {
        "value": {
          "name": "Kate McGlynn",
          "email": "Aidan_Predovic43@example.org",
          "phone": "07978118153",
          "governorate": "MUTHANNA"
        }
      },
      "BranchUpdateExample": {
        "value": {
          "name": "Grant Satterfield",
          "email": "Hertha.Armstrong@example.com",
          "phone": "07706669903",
          "governorate": "DIYALA"
        }
      },
      "TenantCreateExample": {
        "value": {
          "name": "Miss Blanca Kub",
          "phone": "07373523814",
          "website": "https://attached-disdain.org/",
          "logo": "https://buzzing-processing.org",
          "registrationText": "spoliatio",
          "governoratePrice": 2133324212469760,
          "deliveryAgentFee": 1219965009002496,
          "baghdadPrice": 558042466746368,
          "additionalPriceForEvery500000IraqiDinar": 5754698204184576,
          "additionalPriceForEveryKilogram": 6909657461293056,
          "additionalPriceForRemoteAreas": 3186089497985024,
          "orderStatusAutomaticUpdate": true
        }
      },
      "TenantUpdateExample": {
        "value": {
          "name": "Jana Dickinson",
          "phone": "07398238191",
          "website": "https://gleaming-threshold.org/",
          "logo": "https://exciting-radiosonde.org",
          "registrationText": "antiquus",
          "governoratePrice": 5722586973470720,
          "deliveryAgentFee": 1443361334493184,
          "baghdadPrice": 4376112664674304,
          "additionalPriceForEvery500000IraqiDinar": 5589874539233280,
          "additionalPriceForEveryKilogram": 6905771757404160,
          "additionalPriceForRemoteAreas": 1576635297955840,
          "orderStatusAutomaticUpdate": true
        }
      },
      "OrderCreateExample": {
        "value": {
          "totalCost": 4141215018647552,
          "paidAmount": 7195241987702784,
          "totalCostInUSD": 6682008979767296,
          "paidAmountInUSD": 3238118144606208,
          "discount": 3176562977406976,
          "receiptNumber": 5284083458375680,
          "quantity": 3692891216019456,
          "weight": 6698491998896128,
          "recipientName": "thema",
          "recipientPhone": "acerbitas",
          "recipientAddress": "omnis",
          "details": "vado",
          "notes": "suppellex",
          "status": "PROCESSING",
          "deliveryType": "NORMAL",
          "clientID": "22f6eb3f-90fd-4175-91b6-593fc1c0a459",
          "deliveryAgentID": "a9d6fdd4-1bcc-47fc-bffb-7c1bcd9220b8",
          "deliveryDate": "2023-10-20T16:23:46.753Z"
        }
      },
      "OrderUpdateExample": {
        "value": {
          "totalCost": 2980773623758848,
          "paidAmount": 7749792587317248,
          "totalCostInUSD": 3046228946321408,
          "paidAmountInUSD": 4147519814631424,
          "discount": 2036850866782208,
          "receiptNumber": 7069953165361152,
          "quantity": 6569981386948608,
          "weight": 702723299213312,
          "recipientName": "delego",
          "recipientPhone": "curia",
          "recipientAddress": "vorago",
          "details": "conatus",
          "notes": "vulgivagus",
          "status": "WITH_RECEIVING_AGENT",
          "deliveryType": "REPLACEMENT",
          "clientID": "efb0ba87-369b-4f78-afee-e23e05da8c27",
          "deliveryAgentID": "4e15df4b-2561-4e56-8254-bc4ce1995055",
          "deliveryDate": "2023-10-20T15:54:02.510Z"
        }
      }
    },
    "@schemas": {
      "UserCreateSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "salary": {
            "type": "number",
            "minimum": 0
          },
          "repositoryID": {
            "type": "string",
            "format": "uuid"
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPER_ADMIN",
              "COMPANY_MANAGER",
              "ACCOUNT_MANAGER",
              "ACCOUNTANT",
              "DELIVERY_AGENT",
              "RECEIVING_AGENT",
              "BRANCH_MANAGER",
              "EMERGENCY_EMPLOYEE",
              "DATA_ENTRY",
              "REPOSITORIY_EMPLOYEE",
              "INQUIRY_EMPLOYEE"
            ]
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADD_ORDER_TO_DELIVERY_AGENT",
                "ADD_PAGE",
                "ADD_ORDER",
                "ADD_CLIENT",
                "EDIT_CLIENT_NAME",
                "EDIT_ORDER_TOTAL_AMOUNT",
                "CHANGE_ORDER_STATUS",
                "CHANGE_CLOSED_ORDER_STATUS",
                "LOCK_ORDER_STATUS",
                "DELETE_PRICES",
                "DELETE_ORDERS",
                "DELETE_REPORTS",
                "DELETE_COMPANY_REPORTS",
                "DELETE_REPOSITORIES_REPORTS",
                "DELETE_GOVERNMENT_REPORTS",
                "DELETE_DELIVERY_AGENT_REPORTS"
              ]
            }
          }
        },
        "required": [
          "username",
          "name",
          "password",
          "phone",
          "salary",
          "repositoryID",
          "branchID",
          "role",
          "permissions"
        ]
      },
      "UserSigninSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "RepositoryCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "branchID"
        ]
      },
      "UserUpdateSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "salary": {
            "type": "number",
            "minimum": 0
          },
          "repositoryID": {
            "type": "string",
            "format": "uuid"
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPER_ADMIN",
              "COMPANY_MANAGER",
              "ACCOUNT_MANAGER",
              "ACCOUNTANT",
              "DELIVERY_AGENT",
              "RECEIVING_AGENT",
              "BRANCH_MANAGER",
              "EMERGENCY_EMPLOYEE",
              "DATA_ENTRY",
              "REPOSITORIY_EMPLOYEE",
              "INQUIRY_EMPLOYEE"
            ]
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADD_ORDER_TO_DELIVERY_AGENT",
                "ADD_PAGE",
                "ADD_ORDER",
                "ADD_CLIENT",
                "EDIT_CLIENT_NAME",
                "EDIT_ORDER_TOTAL_AMOUNT",
                "CHANGE_ORDER_STATUS",
                "CHANGE_CLOSED_ORDER_STATUS",
                "LOCK_ORDER_STATUS",
                "DELETE_PRICES",
                "DELETE_ORDERS",
                "DELETE_REPORTS",
                "DELETE_COMPANY_REPORTS",
                "DELETE_REPOSITORIES_REPORTS",
                "DELETE_GOVERNMENT_REPORTS",
                "DELETE_DELIVERY_AGENT_REPORTS"
              ]
            }
          }
        }
      },
      "RepositoryUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "LocationCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "governorate": {
            "type": "string",
            "enum": [
              "AL_ANBAR",
              "BABIL",
              "BAGHDAD",
              "BASRA",
              "DHI_QAR",
              "AL_QADISIYYAH",
              "DIYALA",
              "DUHOK",
              "ERBIL",
              "KARBALA",
              "KIRKUK",
              "MAYSAN",
              "MUTHANNA",
              "NAJAF",
              "NINAWA",
              "SALAH_AL_DIN",
              "SULAYMANIYAH",
              "WASIT"
            ]
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryAgentsIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "name",
          "governorate",
          "branchID",
          "deliveryAgentsIDs"
        ]
      },
      "LocationUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "governorate": {
            "type": "string",
            "enum": [
              "AL_ANBAR",
              "BABIL",
              "BAGHDAD",
              "BASRA",
              "DHI_QAR",
              "AL_QADISIYYAH",
              "DIYALA",
              "DUHOK",
              "ERBIL",
              "KARBALA",
              "KIRKUK",
              "MAYSAN",
              "MUTHANNA",
              "NAJAF",
              "NINAWA",
              "SALAH_AL_DIN",
              "SULAYMANIYAH",
              "WASIT"
            ]
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryAgentsIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ClientCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "CLIENT",
              "CLIENT_ASSISTANT"
            ]
          },
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "phone",
          "accountType",
          "password",
          "branchID"
        ]
      },
      "ClientUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "CLIENT",
              "CLIENT_ASSISTANT"
            ]
          },
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "BranchCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "governorate": {
            "type": "string",
            "enum": [
              "AL_ANBAR",
              "BABIL",
              "BAGHDAD",
              "BASRA",
              "DHI_QAR",
              "AL_QADISIYYAH",
              "DIYALA",
              "DUHOK",
              "ERBIL",
              "KARBALA",
              "KIRKUK",
              "MAYSAN",
              "MUTHANNA",
              "NAJAF",
              "NINAWA",
              "SALAH_AL_DIN",
              "SULAYMANIYAH",
              "WASIT"
            ]
          }
        },
        "required": [
          "name",
          "email",
          "phone",
          "governorate"
        ]
      },
      "BranchUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "governorate": {
            "type": "string",
            "enum": [
              "AL_ANBAR",
              "BABIL",
              "BAGHDAD",
              "BASRA",
              "DHI_QAR",
              "AL_QADISIYYAH",
              "DIYALA",
              "DUHOK",
              "ERBIL",
              "KARBALA",
              "KIRKUK",
              "MAYSAN",
              "MUTHANNA",
              "NAJAF",
              "NINAWA",
              "SALAH_AL_DIN",
              "SULAYMANIYAH",
              "WASIT"
            ]
          }
        }
      },
      "TenantCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "logo": {
            "type": "string",
            "format": "uri"
          },
          "registrationText": {
            "type": "string"
          },
          "governoratePrice": {
            "type": "number",
            "minimum": 0
          },
          "deliveryAgentFee": {
            "type": "number",
            "minimum": 0
          },
          "baghdadPrice": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForEvery500000IraqiDinar": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForEveryKilogram": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForRemoteAreas": {
            "type": "number",
            "minimum": 0
          },
          "orderStatusAutomaticUpdate": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "phone",
          "governoratePrice",
          "deliveryAgentFee",
          "baghdadPrice",
          "additionalPriceForEvery500000IraqiDinar",
          "additionalPriceForEveryKilogram",
          "additionalPriceForRemoteAreas"
        ]
      },
      "TenantUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "logo": {
            "type": "string",
            "format": "uri"
          },
          "registrationText": {
            "type": "string"
          },
          "governoratePrice": {
            "type": "number",
            "minimum": 0
          },
          "deliveryAgentFee": {
            "type": "number",
            "minimum": 0
          },
          "baghdadPrice": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForEvery500000IraqiDinar": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForEveryKilogram": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForRemoteAreas": {
            "type": "number",
            "minimum": 0
          },
          "orderStatusAutomaticUpdate": {
            "type": "boolean"
          }
        }
      },
      "OrderCreateSchema": {
        "type": "object",
        "properties": {
          "totalCost": {
            "type": "number"
          },
          "paidAmount": {
            "type": "number"
          },
          "totalCostInUSD": {
            "type": "number"
          },
          "paidAmountInUSD": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          },
          "receiptNumber": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          },
          "recipientName": {
            "type": "string"
          },
          "recipientPhone": {
            "type": "string"
          },
          "recipientAddress": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "REGISTERED",
              "READY_TO_SEND",
              "WITH_DELIVERY_AGENT",
              "DELIVERED",
              "REPLACED",
              "PARTIALLY_RETURNED",
              "RETURNED",
              "POSTPONED",
              "CHANGE_ADDRESS",
              "RESEND",
              "WITH_RECEIVING_AGENT",
              "PROCESSING"
            ]
          },
          "deliveryType": {
            "type": "string",
            "enum": [
              "NORMAL",
              "REPLACEMENT"
            ]
          },
          "clientID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryAgentID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "totalCost",
          "paidAmount",
          "totalCostInUSD",
          "paidAmountInUSD",
          "discount",
          "receiptNumber",
          "quantity",
          "weight",
          "recipientName",
          "recipientPhone",
          "recipientAddress",
          "details",
          "notes",
          "status",
          "deliveryType",
          "clientID",
          "deliveryAgentID"
        ]
      },
      "OrderUpdateSchema": {
        "type": "object",
        "properties": {
          "totalCost": {
            "type": "number"
          },
          "paidAmount": {
            "type": "number"
          },
          "totalCostInUSD": {
            "type": "number"
          },
          "paidAmountInUSD": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          },
          "receiptNumber": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          },
          "recipientName": {
            "type": "string"
          },
          "recipientPhone": {
            "type": "string"
          },
          "recipientAddress": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "REGISTERED",
              "READY_TO_SEND",
              "WITH_DELIVERY_AGENT",
              "DELIVERED",
              "REPLACED",
              "PARTIALLY_RETURNED",
              "RETURNED",
              "POSTPONED",
              "CHANGE_ADDRESS",
              "RESEND",
              "WITH_RECEIVING_AGENT",
              "PROCESSING"
            ]
          },
          "deliveryType": {
            "type": "string",
            "enum": [
              "NORMAL",
              "REPLACEMENT"
            ]
          },
          "clientID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryAgentID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}