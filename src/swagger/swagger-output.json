{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Al Barq API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/API/",
  "tags": [
    {
      "name": "Auth Routes",
      "description": "Signin & Signup Routes"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/auth/signin": {
      "post": {
        "tags": [
          "Auth Routes"
        ],
        "description": "",
        "responses": {
          "201-1": {
            "description": "User Signined Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "token": {
                  "type": "string",
                  "example": "token"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": "Password is not correct"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Password is not correct"
          },
          "400-2": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User not found"
          },
          "500-1": {
            "description": "Cant signin the user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant signin the user"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSigninSchema"
              },
              "examples": {
                "UserSigninExample": {
                  "$ref": "#/components/examples/UserSigninExample"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/validate-token": {
      "post": {
        "tags": [
          "Auth Routes"
        ],
        "description": "User needs to be logged in",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Token is valid",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "valid"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "invalid token"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Token is invalid"
          },
          "401-2": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": "Please Log In!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Please Log In!"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "User created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "User Name"
                    },
                    "username": {
                      "type": "string",
                      "example": "username"
                    },
                    "phone": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "salary": {
                      "type": "number",
                      "example": 1000
                    },
                    "role": {
                      "type": "string",
                      "example": "SUPER_ADMIN"
                    },
                    "permissions": {
                      "type": "array",
                      "example": [
                        "CREATE_USER"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    },
                    "repository": {
                      "type": "string",
                      "example": "Repository data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the user"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateSchema"
              },
              "examples": {
                "UserCreateExample": {
                  "$ref": "#/components/examples/UserCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all users",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "User Name"
                      },
                      "username": {
                        "type": "string",
                        "example": "username"
                      },
                      "phone": {
                        "type": "string",
                        "example": "0123456789"
                      },
                      "salary": {
                        "type": "number",
                        "example": 1000
                      },
                      "role": {
                        "type": "string",
                        "example": "SUPER_ADMIN"
                      },
                      "permissions": {
                        "type": "array",
                        "example": [
                          "CREATE_USER"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "branch": {
                        "type": "string",
                        "example": "Branch data object"
                      },
                      "repository": {
                        "type": "string",
                        "example": "Repository data object"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the users data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the users data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/users/{userID}": {
      "get": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the user data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "User Name"
                    },
                    "username": {
                      "type": "string",
                      "example": "username"
                    },
                    "phone": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "salary": {
                      "type": "number",
                      "example": 1000
                    },
                    "role": {
                      "type": "string",
                      "example": "SUPER_ADMIN"
                    },
                    "permissions": {
                      "type": "array",
                      "example": [
                        "CREATE_USER"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    },
                    "repository": {
                      "type": "string",
                      "example": "Repository data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "User Name"
                    },
                    "username": {
                      "type": "string",
                      "example": "username"
                    },
                    "phone": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "salary": {
                      "type": "number",
                      "example": 1000
                    },
                    "role": {
                      "type": "string",
                      "example": "SUPER_ADMIN"
                    },
                    "permissions": {
                      "type": "array",
                      "example": [
                        "CREATE_USER"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    },
                    "repository": {
                      "type": "string",
                      "example": "Repository data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateSchema"
              },
              "examples": {
                "UserUpdateExample": {
                  "$ref": "#/components/examples/UserUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "User deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "User deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the user"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/repositories": {
      "post": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Repository created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Repository Name"
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the repository",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the repository"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryCreateSchema"
              },
              "examples": {
                "RepositoryCreateExample": {
                  "$ref": "#/components/examples/RepositoryCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all repositories",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "Repository Name"
                      },
                      "branch": {
                        "type": "string",
                        "example": "Branch data object"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the repositories data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the repositories data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/repositories/{repositoryID}": {
      "get": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "repositoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the repository data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Repository Name"
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "repositoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Repository updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Repository Name"
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryUpdateSchema"
              },
              "examples": {
                "RepositoryUpdateExample": {
                  "$ref": "#/components/examples/RepositoryUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "repositoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Repository deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Repository deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the repository",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the repository"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/clients": {
      "post": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Client created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "accountType": {
                      "type": "string",
                      "example": "true"
                    },
                    "branch": {
                      "type": "string",
                      "example": "true"
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the client",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the client"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreateSchema"
              },
              "examples": {
                "ClientCreateExample": {
                  "$ref": "#/components/examples/ClientCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all clients",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "true"
                      },
                      "name": {
                        "type": "string",
                        "example": "true"
                      },
                      "phone": {
                        "type": "string",
                        "example": "true"
                      },
                      "accountType": {
                        "type": "string",
                        "example": "true"
                      },
                      "branch": {
                        "type": "string",
                        "example": "true"
                      },
                      "createdBy": {
                        "type": "string",
                        "example": "true"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the clients data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the clients data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/clients/{clientID}": {
      "get": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the client data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "accountType": {
                      "type": "string",
                      "example": "true"
                    },
                    "branch": {
                      "type": "string",
                      "example": "true"
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Client updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "accountType": {
                      "type": "string",
                      "example": "true"
                    },
                    "branch": {
                      "type": "string",
                      "example": "true"
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateSchema"
              },
              "examples": {
                "ClientUpdateExample": {
                  "$ref": "#/components/examples/ClientUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Client deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Client deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the client",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the client"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/branches": {
      "post": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Branch created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Branch Name"
                    },
                    "email": {
                      "type": "string",
                      "example": "Branch email"
                    },
                    "phone": {
                      "type": "string",
                      "example": "Branch phone number"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "AlBasra"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the branch",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the branch"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchCreateSchema"
              },
              "examples": {
                "BranchCreateExample": {
                  "$ref": "#/components/examples/BranchCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all branches",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "Branch Name"
                      },
                      "email": {
                        "type": "string",
                        "example": "Branch email"
                      },
                      "phone": {
                        "type": "string",
                        "example": "Branch phone number"
                      },
                      "governorate": {
                        "type": "string",
                        "example": "AlBasra"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the branches data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the branches data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/branches/{branchID}": {
      "get": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "branchID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the branch data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Branch Name"
                    },
                    "email": {
                      "type": "string",
                      "example": "Branch email"
                    },
                    "phone": {
                      "type": "string",
                      "example": "Branch phone number"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "AlBasra"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "branchID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Branch updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Branch Name"
                    },
                    "email": {
                      "type": "string",
                      "example": "Branch email"
                    },
                    "phone": {
                      "type": "string",
                      "example": "Branch phone number"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "AlBasra"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchUpdateSchema"
              },
              "examples": {
                "BranchUpdateExample": {
                  "$ref": "#/components/examples/BranchUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "branchID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Branch deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Branch deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the branch",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the branch"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/locations": {
      "post": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Location created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "name"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "governorate"
                    },
                    "branch": {
                      "type": "string",
                      "example": "branch object"
                    },
                    "deliveryAgents": {
                      "type": "string",
                      "example": "deliveryAgents object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the location",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the location"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationCreateSchema"
              },
              "examples": {
                "LocationCreateExample": {
                  "$ref": "#/components/examples/LocationCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all locations",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "name"
                      },
                      "governorate": {
                        "type": "string",
                        "example": "governorate"
                      },
                      "branch": {
                        "type": "string",
                        "example": "branch object"
                      },
                      "deliveryAgents": {
                        "type": "string",
                        "example": "deliveryAgents object"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the locations data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the locations data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/locations/{locationID}": {
      "get": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the location data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "name"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "governorate"
                    },
                    "branch": {
                      "type": "string",
                      "example": "branch object"
                    },
                    "deliveryAgents": {
                      "type": "string",
                      "example": "deliveryAgents object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Location updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "name"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "governorate"
                    },
                    "branch": {
                      "type": "string",
                      "example": "branch object"
                    },
                    "deliveryAgents": {
                      "type": "string",
                      "example": "deliveryAgents object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateSchema"
              },
              "examples": {
                "LocationUpdateExample": {
                  "$ref": "#/components/examples/LocationUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Location deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Location deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the location",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the location"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/tenants": {
      "post": {
        "tags": [
          "Tenants Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Tenant created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "website": {
                      "type": "string",
                      "example": "true"
                    },
                    "logo": {
                      "type": "string",
                      "example": "true"
                    },
                    "registrationText": {
                      "type": "string",
                      "example": "true"
                    },
                    "governoratePrice": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryAgentFee": {
                      "type": "string",
                      "example": "true"
                    },
                    "baghdadPrice": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForEvery500000IraqiDinar": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForEveryKilogram": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForRemoteAreas": {
                      "type": "string",
                      "example": "true"
                    },
                    "orderStatusAutomaticUpdate": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the tenant",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the tenant"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantCreateSchema"
              },
              "examples": {
                "TenantCreateExample": {
                  "$ref": "#/components/examples/TenantCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tenants Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all tenants",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "true"
                      },
                      "name": {
                        "type": "string",
                        "example": "true"
                      },
                      "phone": {
                        "type": "string",
                        "example": "true"
                      },
                      "website": {
                        "type": "string",
                        "example": "true"
                      },
                      "logo": {
                        "type": "string",
                        "example": "true"
                      },
                      "registrationText": {
                        "type": "string",
                        "example": "true"
                      },
                      "governoratePrice": {
                        "type": "string",
                        "example": "true"
                      },
                      "deliveryAgentFee": {
                        "type": "string",
                        "example": "true"
                      },
                      "baghdadPrice": {
                        "type": "string",
                        "example": "true"
                      },
                      "additionalPriceForEvery500000IraqiDinar": {
                        "type": "string",
                        "example": "true"
                      },
                      "additionalPriceForEveryKilogram": {
                        "type": "string",
                        "example": "true"
                      },
                      "additionalPriceForRemoteAreas": {
                        "type": "string",
                        "example": "true"
                      },
                      "orderStatusAutomaticUpdate": {
                        "type": "string",
                        "example": "true"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the tenants data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the tenants data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/tenants/{tenantID}": {
      "get": {
        "tags": [
          "Tenants Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "tenantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the tenant data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "website": {
                      "type": "string",
                      "example": "true"
                    },
                    "logo": {
                      "type": "string",
                      "example": "true"
                    },
                    "registrationText": {
                      "type": "string",
                      "example": "true"
                    },
                    "governoratePrice": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryAgentFee": {
                      "type": "string",
                      "example": "true"
                    },
                    "baghdadPrice": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForEvery500000IraqiDinar": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForEveryKilogram": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForRemoteAreas": {
                      "type": "string",
                      "example": "true"
                    },
                    "orderStatusAutomaticUpdate": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tenants Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "tenantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Tenant updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "website": {
                      "type": "string",
                      "example": "true"
                    },
                    "logo": {
                      "type": "string",
                      "example": "true"
                    },
                    "registrationText": {
                      "type": "string",
                      "example": "true"
                    },
                    "governoratePrice": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryAgentFee": {
                      "type": "string",
                      "example": "true"
                    },
                    "baghdadPrice": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForEvery500000IraqiDinar": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForEveryKilogram": {
                      "type": "string",
                      "example": "true"
                    },
                    "additionalPriceForRemoteAreas": {
                      "type": "string",
                      "example": "true"
                    },
                    "orderStatusAutomaticUpdate": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantUpdateSchema"
              },
              "examples": {
                "TenantUpdateExample": {
                  "$ref": "#/components/examples/TenantUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tenants Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "tenantID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Tenant deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Tenant deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the tenant",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the tenant"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/orders": {
      "post": {
        "tags": [
          "Orders Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Order created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "totalCost": {
                      "type": "string",
                      "example": "true"
                    },
                    "paidAmount": {
                      "type": "string",
                      "example": "true"
                    },
                    "totalCostInUSD": {
                      "type": "string",
                      "example": "true"
                    },
                    "paidAmountInUSD": {
                      "type": "string",
                      "example": "true"
                    },
                    "discount": {
                      "type": "string",
                      "example": "true"
                    },
                    "receiptNumber": {
                      "type": "string",
                      "example": "true"
                    },
                    "quantity": {
                      "type": "string",
                      "example": "true"
                    },
                    "weight": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientName": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientPhone": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientAddress": {
                      "type": "string",
                      "example": "true"
                    },
                    "details": {
                      "type": "string",
                      "example": "true"
                    },
                    "notes": {
                      "type": "string",
                      "example": "true"
                    },
                    "status": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryType": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "example": "true"
                    },
                    "client": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryAgent": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the order",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the order"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateSchema"
              },
              "examples": {
                "OrderCreateExample": {
                  "$ref": "#/components/examples/OrderCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Orders Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all orders",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "true"
                      },
                      "totalCost": {
                        "type": "string",
                        "example": "true"
                      },
                      "paidAmount": {
                        "type": "string",
                        "example": "true"
                      },
                      "totalCostInUSD": {
                        "type": "string",
                        "example": "true"
                      },
                      "paidAmountInUSD": {
                        "type": "string",
                        "example": "true"
                      },
                      "discount": {
                        "type": "string",
                        "example": "true"
                      },
                      "receiptNumber": {
                        "type": "string",
                        "example": "true"
                      },
                      "quantity": {
                        "type": "string",
                        "example": "true"
                      },
                      "weight": {
                        "type": "string",
                        "example": "true"
                      },
                      "recipientName": {
                        "type": "string",
                        "example": "true"
                      },
                      "recipientPhone": {
                        "type": "string",
                        "example": "true"
                      },
                      "recipientAddress": {
                        "type": "string",
                        "example": "true"
                      },
                      "details": {
                        "type": "string",
                        "example": "true"
                      },
                      "notes": {
                        "type": "string",
                        "example": "true"
                      },
                      "status": {
                        "type": "string",
                        "example": "true"
                      },
                      "deliveryType": {
                        "type": "string",
                        "example": "true"
                      },
                      "deliveryDate": {
                        "type": "string",
                        "example": "true"
                      },
                      "client": {
                        "type": "string",
                        "example": "true"
                      },
                      "deliveryAgent": {
                        "type": "string",
                        "example": "true"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the orders data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the orders data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/orders/{orderID}": {
      "get": {
        "tags": [
          "Orders Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the order data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "totalCost": {
                      "type": "string",
                      "example": "true"
                    },
                    "paidAmount": {
                      "type": "string",
                      "example": "true"
                    },
                    "totalCostInUSD": {
                      "type": "string",
                      "example": "true"
                    },
                    "paidAmountInUSD": {
                      "type": "string",
                      "example": "true"
                    },
                    "discount": {
                      "type": "string",
                      "example": "true"
                    },
                    "receiptNumber": {
                      "type": "string",
                      "example": "true"
                    },
                    "quantity": {
                      "type": "string",
                      "example": "true"
                    },
                    "weight": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientName": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientPhone": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientAddress": {
                      "type": "string",
                      "example": "true"
                    },
                    "details": {
                      "type": "string",
                      "example": "true"
                    },
                    "notes": {
                      "type": "string",
                      "example": "true"
                    },
                    "status": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryType": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "example": "true"
                    },
                    "client": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryAgent": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Orders Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Order updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "totalCost": {
                      "type": "string",
                      "example": "true"
                    },
                    "paidAmount": {
                      "type": "string",
                      "example": "true"
                    },
                    "totalCostInUSD": {
                      "type": "string",
                      "example": "true"
                    },
                    "paidAmountInUSD": {
                      "type": "string",
                      "example": "true"
                    },
                    "discount": {
                      "type": "string",
                      "example": "true"
                    },
                    "receiptNumber": {
                      "type": "string",
                      "example": "true"
                    },
                    "quantity": {
                      "type": "string",
                      "example": "true"
                    },
                    "weight": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientName": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientPhone": {
                      "type": "string",
                      "example": "true"
                    },
                    "recipientAddress": {
                      "type": "string",
                      "example": "true"
                    },
                    "details": {
                      "type": "string",
                      "example": "true"
                    },
                    "notes": {
                      "type": "string",
                      "example": "true"
                    },
                    "status": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryType": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "example": "true"
                    },
                    "client": {
                      "type": "string",
                      "example": "true"
                    },
                    "deliveryAgent": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateSchema"
              },
              "examples": {
                "OrderUpdateExample": {
                  "$ref": "#/components/examples/OrderUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Orders Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Order deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Order deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the order",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the order"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "examples": {
      "UserCreateExample": {
        "value": {
          "username": "volaticus",
          "name": "Douglas Towne",
          "password": "7UgBkADzieVVg_V",
          "phone": "07731225384",
          "salary": 7820019117326336,
          "repositoryID": "74f4dc62-a159-4785-b04c-eec34cfcdf9a",
          "branchID": "47b6d254-74f9-48f8-a3a9-4c9dc91e9021",
          "role": "ACCOUNTANT",
          "permissions": [
            "EDIT_ORDER_TOTAL_AMOUNT"
          ]
        }
      },
      "UserSigninExample": {
        "value": {
          "username": "ab",
          "password": "K2jjUUilPt4BZf0"
        }
      },
      "RepositoryCreateExample": {
        "value": {
          "name": "Simon Schaefer IV",
          "branchID": "9b311d2c-12b7-46a1-8c02-16c9542417d5"
        }
      },
      "UserUpdateExample": {
        "value": {
          "username": "denego",
          "name": "Salvador Homenick Sr.",
          "password": "PRRdBF1_oPWMmw7",
          "phone": "07469621662",
          "salary": 8471151776890880,
          "repositoryID": "5f3ee3ed-5a0d-400d-8912-3c86c77be4e0",
          "branchID": "8651813e-368f-4438-acc9-db527d30e714",
          "role": "RECEIVING_AGENT",
          "permissions": [
            "CHANGE_CLOSED_ORDER_STATUS",
            "LOCK_ORDER_STATUS",
            "ADD_PAGE"
          ]
        }
      },
      "RepositoryUpdateExample": {
        "value": {
          "name": "Bradford Kassulke",
          "branchID": "0cbcb8ff-e8bd-4b24-8336-7a7d9ee57900"
        }
      },
      "LocationCreateExample": {
        "value": {
          "name": "Oliver Turcotte",
          "governorate": "BAGHDAD",
          "branchID": "67e3b4bb-95e1-4fcf-a436-00da62aaa2e6",
          "deliveryAgentsIDs": [
            "8dfca1d8-d9b7-4b2a-b526-ce1d20156a69",
            "74c814d2-08c7-4b27-94e8-71e5338c547a",
            "0c010fe5-16c5-4350-9017-0ff695d317d9",
            "c69c3054-2016-44aa-b656-56e29e40b777",
            "4c2826da-e596-4bb1-b3c0-f9dc20172212"
          ]
        }
      },
      "LocationUpdateExample": {
        "value": {
          "name": "Mrs. Kristy Adams",
          "governorate": "MUTHANNA",
          "branchID": "69d44719-639d-4407-9a06-893643967f8b",
          "deliveryAgentsIDs": [
            "121dbac8-f90b-4cf6-9776-1059488c1217"
          ]
        }
      },
      "ClientCreateExample": {
        "value": {
          "name": "Caroline Price",
          "phone": "07431762738",
          "accountType": "CLIENT_ASSISTANT",
          "token": "fugit",
          "password": "NHtuoI4jYBmQHbr",
          "branchID": "a3598844-30f6-4fed-bcbb-228871865b56"
        }
      },
      "ClientUpdateExample": {
        "value": {
          "name": "Brandy Emard",
          "phone": "07542343139",
          "accountType": "CLIENT_ASSISTANT",
          "token": "repellendus",
          "password": "yidV_VhQOJ_3MDE",
          "branchID": "5bb33fba-2a51-4ecf-863d-02f2dfe3e644"
        }
      },
      "BranchCreateExample": {
        "value": {
          "name": "Kelley Ratke",
          "email": "Elnora_Dooley@example.org",
          "phone": "07691579890",
          "governorate": "DHI_QAR"
        }
      },
      "BranchUpdateExample": {
        "value": {
          "name": "Dianne Kulas",
          "email": "Camille56@example.net",
          "phone": "07387085691",
          "governorate": "DIYALA"
        }
      },
      "TenantCreateExample": {
        "value": {
          "name": "Dr. Felipe Ziemann DVM",
          "phone": "07762373680",
          "website": "https://far-flung-input.org/",
          "logo": "https://soft-dwelling.com",
          "registrationText": "adnuo",
          "governoratePrice": 8308808835137536,
          "deliveryAgentFee": 7765127845642240,
          "baghdadPrice": 6532940443942912,
          "additionalPriceForEvery500000IraqiDinar": 8084289702854656,
          "additionalPriceForEveryKilogram": 7168032296140800,
          "additionalPriceForRemoteAreas": 5195641804292096,
          "orderStatusAutomaticUpdate": false
        }
      },
      "TenantUpdateExample": {
        "value": {
          "name": "Gordon Erdman",
          "phone": "07344040696",
          "website": "https://private-score.biz/",
          "logo": "https://woeful-island.com",
          "registrationText": "vitiosus",
          "governoratePrice": 7604538242498560,
          "deliveryAgentFee": 2639556853628928,
          "baghdadPrice": 4424966323830784,
          "additionalPriceForEvery500000IraqiDinar": 7253597026779136,
          "additionalPriceForEveryKilogram": 3039247179186176,
          "additionalPriceForRemoteAreas": 5932462901297152,
          "orderStatusAutomaticUpdate": false
        }
      },
      "OrderCreateExample": {
        "value": {
          "totalCost": 3050321494409216,
          "paidAmount": 1619800201625600,
          "totalCostInUSD": 2036250296975360,
          "paidAmountInUSD": 7518923396218880,
          "discount": 1108972662685696,
          "receiptNumber": 1453884822257664,
          "quantity": 5802134679322624,
          "weight": 6759556824694784,
          "recipientName": "adipisci",
          "recipientPhone": "cunae",
          "recipientAddress": "contabesco",
          "details": "aggredior",
          "notes": "dolores",
          "status": "DELIVERED",
          "deliveryType": "NORMAL",
          "clientID": "2f81e2aa-995c-4ba6-8405-fc99bd41f655",
          "deliveryAgentID": "05d1221d-5f9b-4160-bae0-0eb3492a63f7",
          "deliveryDate": "2023-10-20T14:08:54.480Z"
        }
      },
      "OrderUpdateExample": {
        "value": {
          "totalCost": 1393158220939264,
          "paidAmount": 3175535221932032,
          "totalCostInUSD": 4763967882788864,
          "paidAmountInUSD": 2663845143248896,
          "discount": 8099440896245760,
          "receiptNumber": 2191790075543552,
          "quantity": 8862421290582016,
          "weight": 851949419233280,
          "recipientName": "vitae",
          "recipientPhone": "succedo",
          "recipientAddress": "thalassinus",
          "details": "angulus",
          "notes": "caveo",
          "status": "REGISTERED",
          "deliveryType": "NORMAL",
          "clientID": "4629d058-ae92-46db-92bc-0d7c0e52105a",
          "deliveryAgentID": "6580bb75-7286-4656-b0a7-4bb4f6ef8705",
          "deliveryDate": "2023-10-20T08:02:52.212Z"
        }
      }
    },
    "@schemas": {
      "UserCreateSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "salary": {
            "type": "number",
            "minimum": 0
          },
          "repositoryID": {
            "type": "string",
            "format": "uuid"
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPER_ADMIN",
              "COMPANY_MANAGER",
              "ACCOUNT_MANAGER",
              "ACCOUNTANT",
              "DELIVERY_AGENT",
              "RECEIVING_AGENT",
              "BRANCH_MANAGER",
              "EMERGENCY_EMPLOYEE",
              "DATA_ENTRY",
              "REPOSITORIY_EMPLOYEE",
              "INQUIRY_EMPLOYEE"
            ]
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADD_ORDER_TO_DELIVERY_AGENT",
                "ADD_PAGE",
                "ADD_ORDER",
                "ADD_CLIENT",
                "EDIT_CLIENT_NAME",
                "EDIT_ORDER_TOTAL_AMOUNT",
                "CHANGE_ORDER_STATUS",
                "CHANGE_CLOSED_ORDER_STATUS",
                "LOCK_ORDER_STATUS",
                "DELETE_PRICES",
                "DELETE_ORDERS",
                "DELETE_REPORTS",
                "DELETE_COMPANY_REPORTS",
                "DELETE_REPOSITORIES_REPORTS",
                "DELETE_GOVERNMENT_REPORTS",
                "DELETE_DELIVERY_AGENT_REPORTS"
              ]
            }
          }
        },
        "required": [
          "username",
          "name",
          "password",
          "phone",
          "salary",
          "repositoryID",
          "branchID",
          "role",
          "permissions"
        ]
      },
      "UserSigninSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "RepositoryCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "branchID"
        ]
      },
      "UserUpdateSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "salary": {
            "type": "number",
            "minimum": 0
          },
          "repositoryID": {
            "type": "string",
            "format": "uuid"
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPER_ADMIN",
              "COMPANY_MANAGER",
              "ACCOUNT_MANAGER",
              "ACCOUNTANT",
              "DELIVERY_AGENT",
              "RECEIVING_AGENT",
              "BRANCH_MANAGER",
              "EMERGENCY_EMPLOYEE",
              "DATA_ENTRY",
              "REPOSITORIY_EMPLOYEE",
              "INQUIRY_EMPLOYEE"
            ]
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADD_ORDER_TO_DELIVERY_AGENT",
                "ADD_PAGE",
                "ADD_ORDER",
                "ADD_CLIENT",
                "EDIT_CLIENT_NAME",
                "EDIT_ORDER_TOTAL_AMOUNT",
                "CHANGE_ORDER_STATUS",
                "CHANGE_CLOSED_ORDER_STATUS",
                "LOCK_ORDER_STATUS",
                "DELETE_PRICES",
                "DELETE_ORDERS",
                "DELETE_REPORTS",
                "DELETE_COMPANY_REPORTS",
                "DELETE_REPOSITORIES_REPORTS",
                "DELETE_GOVERNMENT_REPORTS",
                "DELETE_DELIVERY_AGENT_REPORTS"
              ]
            }
          }
        }
      },
      "RepositoryUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "LocationCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "governorate": {
            "type": "string",
            "enum": [
              "AL_ANBAR",
              "BABIL",
              "BAGHDAD",
              "BASRA",
              "DHI_QAR",
              "AL_QADISIYYAH",
              "DIYALA",
              "DUHOK",
              "ERBIL",
              "KARBALA",
              "KIRKUK",
              "MAYSAN",
              "MUTHANNA",
              "NAJAF",
              "NINAWA",
              "SALAH_AL_DIN",
              "SULAYMANIYAH",
              "WASIT"
            ]
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryAgentsIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "name",
          "governorate",
          "branchID",
          "deliveryAgentsIDs"
        ]
      },
      "LocationUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "governorate": {
            "type": "string",
            "enum": [
              "AL_ANBAR",
              "BABIL",
              "BAGHDAD",
              "BASRA",
              "DHI_QAR",
              "AL_QADISIYYAH",
              "DIYALA",
              "DUHOK",
              "ERBIL",
              "KARBALA",
              "KIRKUK",
              "MAYSAN",
              "MUTHANNA",
              "NAJAF",
              "NINAWA",
              "SALAH_AL_DIN",
              "SULAYMANIYAH",
              "WASIT"
            ]
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryAgentsIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ClientCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "CLIENT",
              "CLIENT_ASSISTANT"
            ]
          },
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "phone",
          "accountType",
          "password",
          "branchID"
        ]
      },
      "ClientUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "CLIENT",
              "CLIENT_ASSISTANT"
            ]
          },
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "BranchCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "governorate": {
            "type": "string",
            "enum": [
              "AL_ANBAR",
              "BABIL",
              "BAGHDAD",
              "BASRA",
              "DHI_QAR",
              "AL_QADISIYYAH",
              "DIYALA",
              "DUHOK",
              "ERBIL",
              "KARBALA",
              "KIRKUK",
              "MAYSAN",
              "MUTHANNA",
              "NAJAF",
              "NINAWA",
              "SALAH_AL_DIN",
              "SULAYMANIYAH",
              "WASIT"
            ]
          }
        },
        "required": [
          "name",
          "email",
          "phone",
          "governorate"
        ]
      },
      "BranchUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "governorate": {
            "type": "string",
            "enum": [
              "AL_ANBAR",
              "BABIL",
              "BAGHDAD",
              "BASRA",
              "DHI_QAR",
              "AL_QADISIYYAH",
              "DIYALA",
              "DUHOK",
              "ERBIL",
              "KARBALA",
              "KIRKUK",
              "MAYSAN",
              "MUTHANNA",
              "NAJAF",
              "NINAWA",
              "SALAH_AL_DIN",
              "SULAYMANIYAH",
              "WASIT"
            ]
          }
        }
      },
      "TenantCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "logo": {
            "type": "string",
            "format": "uri"
          },
          "registrationText": {
            "type": "string"
          },
          "governoratePrice": {
            "type": "number",
            "minimum": 0
          },
          "deliveryAgentFee": {
            "type": "number",
            "minimum": 0
          },
          "baghdadPrice": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForEvery500000IraqiDinar": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForEveryKilogram": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForRemoteAreas": {
            "type": "number",
            "minimum": 0
          },
          "orderStatusAutomaticUpdate": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "phone",
          "governoratePrice",
          "deliveryAgentFee",
          "baghdadPrice",
          "additionalPriceForEvery500000IraqiDinar",
          "additionalPriceForEveryKilogram",
          "additionalPriceForRemoteAreas"
        ]
      },
      "TenantUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "logo": {
            "type": "string",
            "format": "uri"
          },
          "registrationText": {
            "type": "string"
          },
          "governoratePrice": {
            "type": "number",
            "minimum": 0
          },
          "deliveryAgentFee": {
            "type": "number",
            "minimum": 0
          },
          "baghdadPrice": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForEvery500000IraqiDinar": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForEveryKilogram": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForRemoteAreas": {
            "type": "number",
            "minimum": 0
          },
          "orderStatusAutomaticUpdate": {
            "type": "boolean"
          }
        }
      },
      "OrderCreateSchema": {
        "type": "object",
        "properties": {
          "totalCost": {
            "type": "number"
          },
          "paidAmount": {
            "type": "number"
          },
          "totalCostInUSD": {
            "type": "number"
          },
          "paidAmountInUSD": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          },
          "receiptNumber": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          },
          "recipientName": {
            "type": "string"
          },
          "recipientPhone": {
            "type": "string"
          },
          "recipientAddress": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "REGISTERED",
              "READY_TO_SEND",
              "WITH_DELIVERY_AGENT",
              "DELIVERED",
              "REPLACED",
              "PARTIALLY_RETURNED",
              "RETURNED",
              "POSTPONED",
              "CHANGE_ADDRESS",
              "RESEND",
              "WITH_RECEIVING_AGENT",
              "PROCESSING"
            ]
          },
          "deliveryType": {
            "type": "string",
            "enum": [
              "NORMAL",
              "REPLACEMENT"
            ]
          },
          "clientID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryAgentID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "totalCost",
          "paidAmount",
          "totalCostInUSD",
          "paidAmountInUSD",
          "discount",
          "receiptNumber",
          "quantity",
          "weight",
          "recipientName",
          "recipientPhone",
          "recipientAddress",
          "details",
          "notes",
          "status",
          "deliveryType",
          "clientID",
          "deliveryAgentID"
        ]
      },
      "OrderUpdateSchema": {
        "type": "object",
        "properties": {
          "totalCost": {
            "type": "number"
          },
          "paidAmount": {
            "type": "number"
          },
          "totalCostInUSD": {
            "type": "number"
          },
          "paidAmountInUSD": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          },
          "receiptNumber": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          },
          "recipientName": {
            "type": "string"
          },
          "recipientPhone": {
            "type": "string"
          },
          "recipientAddress": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "REGISTERED",
              "READY_TO_SEND",
              "WITH_DELIVERY_AGENT",
              "DELIVERED",
              "REPLACED",
              "PARTIALLY_RETURNED",
              "RETURNED",
              "POSTPONED",
              "CHANGE_ADDRESS",
              "RESEND",
              "WITH_RECEIVING_AGENT",
              "PROCESSING"
            ]
          },
          "deliveryType": {
            "type": "string",
            "enum": [
              "NORMAL",
              "REPLACEMENT"
            ]
          },
          "clientID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryAgentID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}