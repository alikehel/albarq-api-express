{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Al Barq API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/API/",
  "tags": [
    {
      "name": "Auth Routes",
      "description": "Signin & Signup Routes"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/auth/signin": {
      "post": {
        "tags": [
          "Auth Routes"
        ],
        "description": "",
        "responses": {
          "201-1": {
            "description": "User Signined Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "token": {
                  "type": "string",
                  "example": "token"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": "Password is not correct"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Password is not correct"
          },
          "400-2": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "User not found"
          },
          "500-1": {
            "description": "Cant signin the user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant signin the user"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSigninSchema"
              },
              "examples": {
                "UserSigninExample": {
                  "$ref": "#/components/examples/UserSigninExample"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/validate-token": {
      "post": {
        "tags": [
          "Auth Routes"
        ],
        "description": "User needs to be logged in",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Token is valid",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "valid"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "invalid token"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Token is invalid"
          },
          "401-2": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": "Please Log In!"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Please Log In!"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "User created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "User Name"
                    },
                    "username": {
                      "type": "string",
                      "example": "username"
                    },
                    "phone": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "salary": {
                      "type": "number",
                      "example": 1000
                    },
                    "role": {
                      "type": "string",
                      "example": "SUPER_ADMIN"
                    },
                    "permissions": {
                      "type": "array",
                      "example": [
                        "CREATE_USER"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    },
                    "repository": {
                      "type": "string",
                      "example": "Repository data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the user"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateSchema"
              },
              "examples": {
                "UserCreateExample": {
                  "$ref": "#/components/examples/UserCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all users",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "User Name"
                      },
                      "username": {
                        "type": "string",
                        "example": "username"
                      },
                      "phone": {
                        "type": "string",
                        "example": "0123456789"
                      },
                      "salary": {
                        "type": "number",
                        "example": 1000
                      },
                      "role": {
                        "type": "string",
                        "example": "SUPER_ADMIN"
                      },
                      "permissions": {
                        "type": "array",
                        "example": [
                          "CREATE_USER"
                        ],
                        "items": {
                          "type": "string"
                        }
                      },
                      "branch": {
                        "type": "string",
                        "example": "Branch data object"
                      },
                      "repository": {
                        "type": "string",
                        "example": "Repository data object"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the users data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the users data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/users/{userID}": {
      "get": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the user data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "User Name"
                    },
                    "username": {
                      "type": "string",
                      "example": "username"
                    },
                    "phone": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "salary": {
                      "type": "number",
                      "example": 1000
                    },
                    "role": {
                      "type": "string",
                      "example": "SUPER_ADMIN"
                    },
                    "permissions": {
                      "type": "array",
                      "example": [
                        "CREATE_USER"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    },
                    "repository": {
                      "type": "string",
                      "example": "Repository data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "User Name"
                    },
                    "username": {
                      "type": "string",
                      "example": "username"
                    },
                    "phone": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "salary": {
                      "type": "number",
                      "example": 1000
                    },
                    "role": {
                      "type": "string",
                      "example": "SUPER_ADMIN"
                    },
                    "permissions": {
                      "type": "array",
                      "example": [
                        "CREATE_USER"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    },
                    "repository": {
                      "type": "string",
                      "example": "Repository data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateSchema"
              },
              "examples": {
                "UserUpdateExample": {
                  "$ref": "#/components/examples/UserUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "User deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "User deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the user",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the user"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/repositories": {
      "post": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Repository created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Repository Name"
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the repository",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the repository"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryCreateSchema"
              },
              "examples": {
                "RepositoryCreateExample": {
                  "$ref": "#/components/examples/RepositoryCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all repositories",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "Repository Name"
                      },
                      "branch": {
                        "type": "string",
                        "example": "Branch data object"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the repositories data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the repositories data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/repositories/{repositoryID}": {
      "get": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "repositoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the repository data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Repository Name"
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "repositoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Repository updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Repository Name"
                    },
                    "branch": {
                      "type": "string",
                      "example": "Branch data object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryUpdateSchema"
              },
              "examples": {
                "RepositoryUpdateExample": {
                  "$ref": "#/components/examples/RepositoryUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Repositories Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "repositoryID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Repository deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Repository deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the repository",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the repository"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/clients": {
      "post": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Client created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "accountType": {
                      "type": "string",
                      "example": "true"
                    },
                    "branch": {
                      "type": "string",
                      "example": "true"
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the client",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the client"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientCreateSchema"
              },
              "examples": {
                "ClientCreateExample": {
                  "$ref": "#/components/examples/ClientCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all clients",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "true"
                      },
                      "name": {
                        "type": "string",
                        "example": "true"
                      },
                      "phone": {
                        "type": "string",
                        "example": "true"
                      },
                      "accountType": {
                        "type": "string",
                        "example": "true"
                      },
                      "branch": {
                        "type": "string",
                        "example": "true"
                      },
                      "createdBy": {
                        "type": "string",
                        "example": "true"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the clients data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the clients data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/clients/{clientID}": {
      "get": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the client data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "accountType": {
                      "type": "string",
                      "example": "true"
                    },
                    "branch": {
                      "type": "string",
                      "example": "true"
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Client updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "true"
                    },
                    "name": {
                      "type": "string",
                      "example": "true"
                    },
                    "phone": {
                      "type": "string",
                      "example": "true"
                    },
                    "accountType": {
                      "type": "string",
                      "example": "true"
                    },
                    "branch": {
                      "type": "string",
                      "example": "true"
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "true"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientUpdateSchema"
              },
              "examples": {
                "ClientUpdateExample": {
                  "$ref": "#/components/examples/ClientUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clients Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Client deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Client deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the client",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the client"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/branches": {
      "post": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Branch created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Branch Name"
                    },
                    "email": {
                      "type": "string",
                      "example": "Branch email"
                    },
                    "phone": {
                      "type": "string",
                      "example": "Branch phone number"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "AlBasra"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the branch",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the branch"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchCreateSchema"
              },
              "examples": {
                "BranchCreateExample": {
                  "$ref": "#/components/examples/BranchCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all branches",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "Branch Name"
                      },
                      "email": {
                        "type": "string",
                        "example": "Branch email"
                      },
                      "phone": {
                        "type": "string",
                        "example": "Branch phone number"
                      },
                      "governorate": {
                        "type": "string",
                        "example": "AlBasra"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the branches data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the branches data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/branches/{branchID}": {
      "get": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "branchID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the branch data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Branch Name"
                    },
                    "email": {
                      "type": "string",
                      "example": "Branch email"
                    },
                    "phone": {
                      "type": "string",
                      "example": "Branch phone number"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "AlBasra"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "branchID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Branch updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "Branch Name"
                    },
                    "email": {
                      "type": "string",
                      "example": "Branch email"
                    },
                    "phone": {
                      "type": "string",
                      "example": "Branch phone number"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "AlBasra"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchUpdateSchema"
              },
              "examples": {
                "BranchUpdateExample": {
                  "$ref": "#/components/examples/BranchUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Branches Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "branchID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Branch deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Branch deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the branch",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the branch"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/locations": {
      "post": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Location created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "name"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "governorate"
                    },
                    "branch": {
                      "type": "string",
                      "example": "branch object"
                    },
                    "deliveryAgents": {
                      "type": "string",
                      "example": "deliveryAgents object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400-1": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "message": {
                  "type": "string",
                  "example": ""
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": ""
          },
          "500-1": {
            "description": "Cant create the location",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant create the location"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationCreateSchema"
              },
              "examples": {
                "LocationCreateExample": {
                  "$ref": "#/components/examples/LocationCreateExample"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page Number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got all locations",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "name"
                      },
                      "governorate": {
                        "type": "string",
                        "example": "governorate"
                      },
                      "branch": {
                        "type": "string",
                        "example": "branch object"
                      },
                      "deliveryAgents": {
                        "type": "string",
                        "example": "deliveryAgents object"
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant get the locations data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant get the locations data"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/locations/{locationID}": {
      "get": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Got the location data",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "name"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "governorate"
                    },
                    "branch": {
                      "type": "string",
                      "example": "branch object"
                    },
                    "deliveryAgents": {
                      "type": "string",
                      "example": "deliveryAgents object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "201-1": {
            "description": "Location updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1"
                    },
                    "name": {
                      "type": "string",
                      "example": "name"
                    },
                    "governorate": {
                      "type": "string",
                      "example": "governorate"
                    },
                    "branch": {
                      "type": "string",
                      "example": "branch object"
                    },
                    "deliveryAgents": {
                      "type": "string",
                      "example": "deliveryAgents object"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdateSchema"
              },
              "examples": {
                "LocationUpdateExample": {
                  "$ref": "#/components/examples/LocationUpdateExample"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations Routes"
        ],
        "description": "Must be a super admin",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "200-1": {
            "description": "Location deleted Successfully",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Location deleted successfully"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500-1": {
            "description": "Cant delete the location",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "error"
                },
                "message": {
                  "type": "string",
                  "example": "Cant delete the location"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "examples": {
      "UserCreateExample": {
        "value": {
          "username": "unde",
          "name": "Clint Mertz",
          "password": "H308W3ULMeCMpLg",
          "phone": "07933737676",
          "salary": 3741324446531584,
          "repositoryID": "f358b32a-d5bb-4c2c-917c-87aba068084e",
          "branchID": "8ca84ba7-ff89-47da-a52b-712b26488322",
          "role": "RECEIVING_AGENT",
          "permissions": [
            "ADD_PAGE",
            "ADD_ORDER_TO_DELIVERY_AGENT"
          ]
        }
      },
      "UserSigninExample": {
        "value": {
          "username": "vesper",
          "password": "9sJFVMhIdNolGtN"
        }
      },
      "RepositoryCreateExample": {
        "value": {
          "name": "Naomi Buckridge",
          "branchID": "b41df29d-1f50-4957-afd2-4d810dfb38e4"
        }
      },
      "UserUpdateExample": {
        "value": {
          "username": "calcar",
          "name": "Woodrow Balistreri-Cormier PhD",
          "password": "3yOg1NRwa8wpl7D",
          "phone": "07461624626",
          "salary": 7073442830483456,
          "repositoryID": "e5b5872f-1575-40d0-999d-47733f978430",
          "branchID": "71316e90-fd29-444f-a933-2627f76430b2",
          "role": "RECEIVING_AGENT",
          "permissions": [
            "DELETE_ORDERS"
          ]
        }
      },
      "RepositoryUpdateExample": {
        "value": {
          "name": "Frank Kuhic",
          "branchID": "70a5cd0e-5883-48e0-b76b-d68aa8d6a910"
        }
      },
      "LocationCreateExample": {
        "value": {
          "name": "Mark Dibbert",
          "governorate": "NINAWA",
          "branchID": "aea4a8d5-e8c8-463e-bc77-b99217f6743a",
          "deliveryAgentsIDs": [
            "63359b5f-70fd-45b2-9bda-31aafdb612da",
            "90098b84-aa6d-4fc5-9266-cf86a36cbb7e",
            "6ca8cd78-db1f-4c18-af7a-c5d109c96610",
            "31b8ab9f-8b17-4e74-97ae-4ff49111c30d"
          ]
        }
      },
      "LocationUpdateExample": {
        "value": {
          "name": "Darrin Fisher",
          "governorate": "KIRKUK",
          "branchID": "53007da7-40c7-4bbb-a71a-87c4aeda39ad",
          "deliveryAgentsIDs": [
            "0a2781b3-3ad8-4778-a344-6953f709fce6",
            "45d43804-83e8-4d15-8cb9-b6ba2184a328"
          ]
        }
      },
      "ClientCreateExample": {
        "value": {
          "name": "Kelli Kub",
          "phone": "07304500115",
          "accountType": "CLIENT",
          "token": "fuga",
          "password": "Cm1dqYzp0hfEEq8",
          "branchID": "fd521a1a-965f-4230-a3e3-ab8ca4ed099d"
        }
      },
      "ClientUpdateExample": {
        "value": {
          "name": "Leticia Waters",
          "phone": "07460687755",
          "accountType": "CLIENT",
          "token": "spero",
          "password": "Z0gM4YuaKJb9zD9",
          "branchID": "8177fb3d-b4a4-411e-9bbe-ea9596a0f264"
        }
      },
      "BranchCreateExample": {
        "value": {
          "name": "Tyrone Halvorson Jr.",
          "email": "Peggie.Parker77@example.com",
          "phone": "07652080568",
          "governorate": "AL_ANBAR"
        }
      },
      "BranchUpdateExample": {
        "value": {
          "name": "Lindsey Huel",
          "email": "Pauline_Kozey@example.org",
          "phone": "07629966838",
          "governorate": "DIYALA"
        }
      },
      "TenantCreateExample": {
        "value": {
          "name": "Chester Frami DDS",
          "phone": "07764022803",
          "website": "https://unique-disclosure.net",
          "logo": "https://taut-recall.biz",
          "registrationText": "ater",
          "governoratePrice": 653306256949248,
          "deliveryAgentFee": 4873824459816960,
          "baghdadPrice": 319802035929088,
          "additionalPriceForEvery500000IraqiDinar": 5277569725235200,
          "additionalPriceForEveryKilogram": 5828690963333120,
          "additionalPriceForRemoteAreas": 4192896651624448,
          "orderStatusAutomaticUpdate": true
        }
      },
      "TenantUpdateExample": {
        "value": {
          "name": "Miss Grace Rowe",
          "phone": "07781957132",
          "website": "https://busy-departure.name/",
          "logo": "https://soulful-custody.name/",
          "registrationText": "tenuis",
          "governoratePrice": 830159347253248,
          "deliveryAgentFee": 844422640041984,
          "baghdadPrice": 6824084386086912,
          "additionalPriceForEvery500000IraqiDinar": 3029993990914048,
          "additionalPriceForEveryKilogram": 5774657288404992,
          "additionalPriceForRemoteAreas": 7327667600752640,
          "orderStatusAutomaticUpdate": true
        }
      },
      "OrderCreateExample": {
        "value": {
          "totalCost": 4586108354560000,
          "paidAmount": 6169354712383488,
          "totalCostInUSD": 5357523534086144,
          "paidAmountInUSD": 4613446375047168,
          "discount": 3720405881716736,
          "receiptNumber": 981915465154560,
          "quantity": 4330559757090816,
          "weight": 4049842655461376,
          "recipientName": "sollers",
          "recipientPhone": "inventore",
          "recipientAddress": "aiunt",
          "details": "decumbo",
          "notes": "distinctio",
          "status": "READY_TO_SEND",
          "deliveryType": "REPLACEMENT",
          "clientID": "2c78e8de-d82d-4aa7-a744-a67cc6cd8edf",
          "deliveryAgentID": "cf13162e-e367-45cc-92fa-f5201843d19b",
          "deliveryDate": "2023-10-20T10:09:12.740Z"
        }
      },
      "OrderUpdateExample": {
        "value": {
          "totalCost": 4553287646838784,
          "paidAmount": 8819205629542400,
          "totalCostInUSD": 277175083204608,
          "paidAmountInUSD": 2135327036669952,
          "discount": 3575183778512896,
          "receiptNumber": 5634407968800768,
          "quantity": 5478638696792064,
          "weight": 5694436025565184,
          "recipientName": "conculco",
          "recipientPhone": "surculus",
          "recipientAddress": "vomica",
          "details": "administratio",
          "notes": "praesentium",
          "status": "REPLACED",
          "deliveryType": "NORMAL",
          "clientID": "6514f391-1a14-44ea-9fe6-ba2837c0a1c0",
          "deliveryAgentID": "5d427c8e-74b0-4a3d-9220-88a3755a2989",
          "deliveryDate": "2023-10-20T23:00:22.199Z"
        }
      }
    },
    "@schemas": {
      "UserCreateSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "salary": {
            "type": "number",
            "minimum": 0
          },
          "repositoryID": {
            "type": "string",
            "format": "uuid"
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPER_ADMIN",
              "COMPANY_MANAGER",
              "ACCOUNT_MANAGER",
              "ACCOUNTANT",
              "DELIVERY_AGENT",
              "RECEIVING_AGENT",
              "BRANCH_MANAGER",
              "EMERGENCY_EMPLOYEE",
              "DATA_ENTRY",
              "REPOSITORIY_EMPLOYEE",
              "INQUIRY_EMPLOYEE"
            ]
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADD_ORDER_TO_DELIVERY_AGENT",
                "ADD_PAGE",
                "ADD_ORDER",
                "ADD_CLIENT",
                "EDIT_CLIENT_NAME",
                "EDIT_ORDER_TOTAL_AMOUNT",
                "CHANGE_ORDER_STATUS",
                "CHANGE_CLOSED_ORDER_STATUS",
                "LOCK_ORDER_STATUS",
                "DELETE_PRICES",
                "DELETE_ORDERS",
                "DELETE_REPORTS",
                "DELETE_COMPANY_REPORTS",
                "DELETE_REPOSITORIES_REPORTS",
                "DELETE_GOVERNMENT_REPORTS",
                "DELETE_DELIVERY_AGENT_REPORTS"
              ]
            }
          }
        },
        "required": [
          "username",
          "name",
          "password",
          "phone",
          "salary",
          "repositoryID",
          "branchID",
          "role",
          "permissions"
        ]
      },
      "UserSigninSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "RepositoryCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "branchID"
        ]
      },
      "UserUpdateSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "minLength": 3
          },
          "name": {
            "type": "string",
            "minLength": 3
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "salary": {
            "type": "number",
            "minimum": 0
          },
          "repositoryID": {
            "type": "string",
            "format": "uuid"
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPER_ADMIN",
              "COMPANY_MANAGER",
              "ACCOUNT_MANAGER",
              "ACCOUNTANT",
              "DELIVERY_AGENT",
              "RECEIVING_AGENT",
              "BRANCH_MANAGER",
              "EMERGENCY_EMPLOYEE",
              "DATA_ENTRY",
              "REPOSITORIY_EMPLOYEE",
              "INQUIRY_EMPLOYEE"
            ]
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADD_ORDER_TO_DELIVERY_AGENT",
                "ADD_PAGE",
                "ADD_ORDER",
                "ADD_CLIENT",
                "EDIT_CLIENT_NAME",
                "EDIT_ORDER_TOTAL_AMOUNT",
                "CHANGE_ORDER_STATUS",
                "CHANGE_CLOSED_ORDER_STATUS",
                "LOCK_ORDER_STATUS",
                "DELETE_PRICES",
                "DELETE_ORDERS",
                "DELETE_REPORTS",
                "DELETE_COMPANY_REPORTS",
                "DELETE_REPOSITORIES_REPORTS",
                "DELETE_GOVERNMENT_REPORTS",
                "DELETE_DELIVERY_AGENT_REPORTS"
              ]
            }
          }
        }
      },
      "RepositoryUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "LocationCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "governorate": {
            "type": "string",
            "enum": [
              "AL_ANBAR",
              "BABIL",
              "BAGHDAD",
              "BASRA",
              "DHI_QAR",
              "AL_QADISIYYAH",
              "DIYALA",
              "DUHOK",
              "ERBIL",
              "KARBALA",
              "KIRKUK",
              "MAYSAN",
              "MUTHANNA",
              "NAJAF",
              "NINAWA",
              "SALAH_AL_DIN",
              "SULAYMANIYAH",
              "WASIT"
            ]
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryAgentsIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "name",
          "governorate",
          "branchID",
          "deliveryAgentsIDs"
        ]
      },
      "LocationUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "governorate": {
            "type": "string",
            "enum": [
              "AL_ANBAR",
              "BABIL",
              "BAGHDAD",
              "BASRA",
              "DHI_QAR",
              "AL_QADISIYYAH",
              "DIYALA",
              "DUHOK",
              "ERBIL",
              "KARBALA",
              "KIRKUK",
              "MAYSAN",
              "MUTHANNA",
              "NAJAF",
              "NINAWA",
              "SALAH_AL_DIN",
              "SULAYMANIYAH",
              "WASIT"
            ]
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryAgentsIDs": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "ClientCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "CLIENT",
              "CLIENT_ASSISTANT"
            ]
          },
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "name",
          "phone",
          "accountType",
          "password",
          "branchID"
        ]
      },
      "ClientUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "accountType": {
            "type": "string",
            "enum": [
              "CLIENT",
              "CLIENT_ASSISTANT"
            ]
          },
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "branchID": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "BranchCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "governorate": {
            "type": "string",
            "enum": [
              "AL_ANBAR",
              "BABIL",
              "BAGHDAD",
              "BASRA",
              "DHI_QAR",
              "AL_QADISIYYAH",
              "DIYALA",
              "DUHOK",
              "ERBIL",
              "KARBALA",
              "KIRKUK",
              "MAYSAN",
              "MUTHANNA",
              "NAJAF",
              "NINAWA",
              "SALAH_AL_DIN",
              "SULAYMANIYAH",
              "WASIT"
            ]
          }
        },
        "required": [
          "name",
          "email",
          "phone",
          "governorate"
        ]
      },
      "BranchUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "governorate": {
            "type": "string",
            "enum": [
              "AL_ANBAR",
              "BABIL",
              "BAGHDAD",
              "BASRA",
              "DHI_QAR",
              "AL_QADISIYYAH",
              "DIYALA",
              "DUHOK",
              "ERBIL",
              "KARBALA",
              "KIRKUK",
              "MAYSAN",
              "MUTHANNA",
              "NAJAF",
              "NINAWA",
              "SALAH_AL_DIN",
              "SULAYMANIYAH",
              "WASIT"
            ]
          }
        }
      },
      "TenantCreateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "logo": {
            "type": "string",
            "format": "uri"
          },
          "registrationText": {
            "type": "string"
          },
          "governoratePrice": {
            "type": "number",
            "minimum": 0
          },
          "deliveryAgentFee": {
            "type": "number",
            "minimum": 0
          },
          "baghdadPrice": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForEvery500000IraqiDinar": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForEveryKilogram": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForRemoteAreas": {
            "type": "number",
            "minimum": 0
          },
          "orderStatusAutomaticUpdate": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "phone",
          "governoratePrice",
          "deliveryAgentFee",
          "baghdadPrice",
          "additionalPriceForEvery500000IraqiDinar",
          "additionalPriceForEveryKilogram",
          "additionalPriceForRemoteAreas"
        ]
      },
      "TenantUpdateSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3
          },
          "phone": {
            "type": "string",
            "pattern": "^07[3-9][0-9]{8}$"
          },
          "website": {
            "type": "string",
            "format": "uri"
          },
          "logo": {
            "type": "string",
            "format": "uri"
          },
          "registrationText": {
            "type": "string"
          },
          "governoratePrice": {
            "type": "number",
            "minimum": 0
          },
          "deliveryAgentFee": {
            "type": "number",
            "minimum": 0
          },
          "baghdadPrice": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForEvery500000IraqiDinar": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForEveryKilogram": {
            "type": "number",
            "minimum": 0
          },
          "additionalPriceForRemoteAreas": {
            "type": "number",
            "minimum": 0
          },
          "orderStatusAutomaticUpdate": {
            "type": "boolean"
          }
        }
      },
      "OrderCreateSchema": {
        "type": "object",
        "properties": {
          "totalCost": {
            "type": "number"
          },
          "paidAmount": {
            "type": "number"
          },
          "totalCostInUSD": {
            "type": "number"
          },
          "paidAmountInUSD": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          },
          "receiptNumber": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          },
          "recipientName": {
            "type": "string"
          },
          "recipientPhone": {
            "type": "string"
          },
          "recipientAddress": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "REGISTERED",
              "READY_TO_SEND",
              "WITH_DELIVERY_AGENT",
              "DELIVERED",
              "REPLACED",
              "PARTIALLY_RETURNED",
              "RETURNED",
              "POSTPONED",
              "CHANGE_ADDRESS",
              "RESEND",
              "WITH_RECEIVING_AGENT",
              "PROCESSING"
            ]
          },
          "deliveryType": {
            "type": "string",
            "enum": [
              "NORMAL",
              "REPLACEMENT"
            ]
          },
          "clientID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryAgentID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "totalCost",
          "paidAmount",
          "totalCostInUSD",
          "paidAmountInUSD",
          "discount",
          "receiptNumber",
          "quantity",
          "weight",
          "recipientName",
          "recipientPhone",
          "recipientAddress",
          "details",
          "notes",
          "status",
          "deliveryType",
          "clientID",
          "deliveryAgentID"
        ]
      },
      "OrderUpdateSchema": {
        "type": "object",
        "properties": {
          "totalCost": {
            "type": "number"
          },
          "paidAmount": {
            "type": "number"
          },
          "totalCostInUSD": {
            "type": "number"
          },
          "paidAmountInUSD": {
            "type": "number"
          },
          "discount": {
            "type": "number"
          },
          "receiptNumber": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          },
          "recipientName": {
            "type": "string"
          },
          "recipientPhone": {
            "type": "string"
          },
          "recipientAddress": {
            "type": "string"
          },
          "details": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "REGISTERED",
              "READY_TO_SEND",
              "WITH_DELIVERY_AGENT",
              "DELIVERED",
              "REPLACED",
              "PARTIALLY_RETURNED",
              "RETURNED",
              "POSTPONED",
              "CHANGE_ADDRESS",
              "RESEND",
              "WITH_RECEIVING_AGENT",
              "PROCESSING"
            ]
          },
          "deliveryType": {
            "type": "string",
            "enum": [
              "NORMAL",
              "REPLACEMENT"
            ]
          },
          "clientID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryAgentID": {
            "type": "string",
            "format": "uuid"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}